// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: AggregateMessages.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataSourceType int32

const (
	DataSourceType_TEXT  DataSourceType = 0
	DataSourceType_VIDEO DataSourceType = 1
	DataSourceType_AUDIO DataSourceType = 2
)

// Enum value maps for DataSourceType.
var (
	DataSourceType_name = map[int32]string{
		0: "TEXT",
		1: "VIDEO",
		2: "AUDIO",
	}
	DataSourceType_value = map[string]int32{
		"TEXT":  0,
		"VIDEO": 1,
		"AUDIO": 2,
	}
)

func (x DataSourceType) Enum() *DataSourceType {
	p := new(DataSourceType)
	*p = x
	return p
}

func (x DataSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_AggregateMessages_proto_enumTypes[0].Descriptor()
}

func (DataSourceType) Type() protoreflect.EnumType {
	return &file_AggregateMessages_proto_enumTypes[0]
}

func (x DataSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSourceType.Descriptor instead.
func (DataSourceType) EnumDescriptor() ([]byte, []int) {
	return file_AggregateMessages_proto_rawDescGZIP(), []int{0}
}

//
//Represents a text, video, or audio source. (e.g. abc.com, bloomberg.com, twitter maybe in the future?)
type DataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // for db storage
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // example: Bloomberg
	BaseUrl string `protobuf:"bytes,3,opt,name=baseUrl,proto3" json:"baseUrl,omitempty"` // example: "https://www.bloomberg.com/
}

func (x *DataSource) Reset() {
	*x = DataSource{}
	mi := &file_AggregateMessages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSource) ProtoMessage() {}

func (x *DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_AggregateMessages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSource.ProtoReflect.Descriptor instead.
func (*DataSource) Descriptor() ([]byte, []int) {
	return file_AggregateMessages_proto_rawDescGZIP(), []int{0}
}

func (x *DataSource) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DataSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataSource) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

//
//Represents a particular "article." This can be text, video, or audio.
type ArticleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // for caching
	Source        *DataSource    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`                            // the source we pulled this from
	Url           string         `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                  // full URL to the article
	Title         string         `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                              // article title
	Content       string         `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                          // full body of content
	Tags          []*Tag         `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                // keyword tags for searching during future podcast generation
	ProcessedText *string        `protobuf:"bytes,7,opt,name=processedText,proto3,oneof" json:"processedText,omitempty"`        // processed text, ready to feed AI
	Date          *Date          `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`                                // date article was posted
	Type          DataSourceType `protobuf:"varint,9,opt,name=type,proto3,enum=generated.DataSourceType" json:"type,omitempty"` // TEXT, AUDIO, or VIDEO
}

func (x *ArticleData) Reset() {
	*x = ArticleData{}
	mi := &file_AggregateMessages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleData) ProtoMessage() {}

func (x *ArticleData) ProtoReflect() protoreflect.Message {
	mi := &file_AggregateMessages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleData.ProtoReflect.Descriptor instead.
func (*ArticleData) Descriptor() ([]byte, []int) {
	return file_AggregateMessages_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleData) GetSource() *DataSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ArticleData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ArticleData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleData) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArticleData) GetProcessedText() string {
	if x != nil && x.ProcessedText != nil {
		return *x.ProcessedText
	}
	return ""
}

func (x *ArticleData) GetDate() *Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ArticleData) GetType() DataSourceType {
	if x != nil {
		return x.Type
	}
	return DataSourceType_TEXT
}

//
//Request object for an aggregate of processed articles related to the input Tags.
type AggregateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int32         `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`              // the user we are requesting content for
	Tags          []*Tag        `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`                   // keywords, topics, etc
	Sources       []*DataSource `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`             // sources to pull from
	IgnoreSources []*DataSource `protobuf:"bytes,4,rep,name=ignoreSources,proto3" json:"ignoreSources,omitempty"` // sources to ignore
}

func (x *AggregateRequest) Reset() {
	*x = AggregateRequest{}
	mi := &file_AggregateMessages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest) ProtoMessage() {}

func (x *AggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AggregateMessages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest.ProtoReflect.Descriptor instead.
func (*AggregateRequest) Descriptor() ([]byte, []int) {
	return file_AggregateMessages_proto_rawDescGZIP(), []int{2}
}

func (x *AggregateRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AggregateRequest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AggregateRequest) GetSources() []*DataSource {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *AggregateRequest) GetIgnoreSources() []*DataSource {
	if x != nil {
		return x.IgnoreSources
	}
	return nil
}

var File_AggregateMessages_proto protoreflect.FileDescriptor

var file_AggregateMessages_proto_rawDesc = []byte{
	0x0a, 0x17, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x1a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4a, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xc3, 0x02, 0x0a,
	0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x29, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2a, 0x30, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49,
	0x4f, 0x10, 0x02, 0x42, 0x98, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x16, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x79, 0x73,
	0x73, 0x61, 0x6b, 0x6f, 0x7a, 0x6d, 0x61, 0x2f, 0x73, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2d,
	0x61, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0xa2, 0x02, 0x03, 0x47,
	0x58, 0x58, 0xaa, 0x02, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0xca, 0x02,
	0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0xe2, 0x02, 0x15, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_AggregateMessages_proto_rawDescOnce sync.Once
	file_AggregateMessages_proto_rawDescData = file_AggregateMessages_proto_rawDesc
)

func file_AggregateMessages_proto_rawDescGZIP() []byte {
	file_AggregateMessages_proto_rawDescOnce.Do(func() {
		file_AggregateMessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_AggregateMessages_proto_rawDescData)
	})
	return file_AggregateMessages_proto_rawDescData
}

var file_AggregateMessages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_AggregateMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_AggregateMessages_proto_goTypes = []any{
	(DataSourceType)(0),      // 0: generated.DataSourceType
	(*DataSource)(nil),       // 1: generated.DataSource
	(*ArticleData)(nil),      // 2: generated.ArticleData
	(*AggregateRequest)(nil), // 3: generated.AggregateRequest
	(*Tag)(nil),              // 4: generated.Tag
	(*Date)(nil),             // 5: generated.Date
}
var file_AggregateMessages_proto_depIdxs = []int32{
	1, // 0: generated.ArticleData.source:type_name -> generated.DataSource
	4, // 1: generated.ArticleData.tags:type_name -> generated.Tag
	5, // 2: generated.ArticleData.date:type_name -> generated.Date
	0, // 3: generated.ArticleData.type:type_name -> generated.DataSourceType
	4, // 4: generated.AggregateRequest.tags:type_name -> generated.Tag
	1, // 5: generated.AggregateRequest.sources:type_name -> generated.DataSource
	1, // 6: generated.AggregateRequest.ignoreSources:type_name -> generated.DataSource
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_AggregateMessages_proto_init() }
func file_AggregateMessages_proto_init() {
	if File_AggregateMessages_proto != nil {
		return
	}
	file_Base_proto_init()
	file_AggregateMessages_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AggregateMessages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_AggregateMessages_proto_goTypes,
		DependencyIndexes: file_AggregateMessages_proto_depIdxs,
		EnumInfos:         file_AggregateMessages_proto_enumTypes,
		MessageInfos:      file_AggregateMessages_proto_msgTypes,
	}.Build()
	File_AggregateMessages_proto = out.File
	file_AggregateMessages_proto_rawDesc = nil
	file_AggregateMessages_proto_goTypes = nil
	file_AggregateMessages_proto_depIdxs = nil
}
